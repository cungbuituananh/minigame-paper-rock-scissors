{"ast":null,"code":"var _jsxFileName = \"/Users/cungbuituananh/Desktop/github/minigame-paper-rock-scissors/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState, createContext } from \"react\";\nimport SelectHand from \"./components/SelectHand\";\nimport ShowHands from \"./components/ShowHands\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ContextElement = /*#__PURE__*/createContext();\n\nfunction App() {\n  _s();\n\n  const [start, setStart] = useState(false);\n  const [playerSelect, setPlayerSelect] = useState(\"rock\");\n  const [computerSelect, setComputerSelect] = useState(\"rock\");\n  const [status, setStatus] = useState(\"Draw\");\n  const [playerScore, setPlayerScore] = useState(0);\n  const [computerScore, setComputerScore] = useState(0);\n  const [count, setCount] = useState(0);\n  const MAX_GAME = 10;\n\n  function reset() {\n    setPlayerSelect(\"rock\");\n    setComputerSelect(\"rock\");\n    setStatus(\"Draw\");\n    setCount(0);\n    setPlayerScore(0);\n    setComputerScore(0);\n  } // console.log(playerSelect, computerSelect);\n\n\n  return /*#__PURE__*/_jsxDEV(ContextElement.Provider, {\n    value: {\n      setPlayerSelect,\n      setComputerSelect,\n      playerSelect,\n      computerSelect,\n      status,\n      setStatus,\n      setPlayerScore,\n      setComputerScore,\n      playerScore,\n      computerScore,\n      count,\n      setCount\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [start ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ShowHands, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SelectHand, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Paper - Rock - Scissor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-success\",\n          onClick: () => setStart(!start),\n          children: \"Start Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), count === MAX_GAME && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-board d-flex flex-column justify-content-center\",\n          children: [playerScore > computerScore ? /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-center text-light\",\n            children: \"Player Win\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-center text-light\",\n            children: \"Player Lose\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: () => reset(),\n            children: \"Play Again\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"W3izb1xrJybWfYUPIPVKQoV7EXM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/cungbuituananh/Desktop/github/minigame-paper-rock-scissors/src/App.js"],"names":["useState","createContext","SelectHand","ShowHands","ContextElement","App","start","setStart","playerSelect","setPlayerSelect","computerSelect","setComputerSelect","status","setStatus","playerScore","setPlayerScore","computerScore","setComputerScore","count","setCount","MAX_GAME","reset"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport { useState, createContext } from \"react\";\nimport SelectHand from \"./components/SelectHand\";\nimport ShowHands from \"./components/ShowHands\";\n\nexport const ContextElement = createContext();\nfunction App() {\n  const [start, setStart] = useState(false);\n  const [playerSelect, setPlayerSelect] = useState(\"rock\");\n  const [computerSelect, setComputerSelect] = useState(\"rock\");\n  const [status, setStatus] = useState(\"Draw\");\n  const [playerScore, setPlayerScore] = useState(0);\n  const [computerScore, setComputerScore] = useState(0);\n  const [count, setCount] = useState(0);\n  const MAX_GAME = 10;\n\n  function reset() {\n    setPlayerSelect(\"rock\");\n    setComputerSelect(\"rock\");\n    setStatus(\"Draw\");\n    setCount(0);\n    setPlayerScore(0);\n    setComputerScore(0);\n  }\n  // console.log(playerSelect, computerSelect);\n  return (\n    <ContextElement.Provider\n      value={{\n        setPlayerSelect,\n        setComputerSelect,\n        playerSelect,\n        computerSelect,\n        status,\n        setStatus,\n        setPlayerScore,\n        setComputerScore,\n        playerScore,\n        computerScore,\n        count,\n        setCount\n      }}\n    >\n      <div className=\"App\">\n        {start ? (\n          <>\n            <ShowHands />\n            <SelectHand />\n          </>\n        ) : (\n          <>\n            <h1>Paper - Rock - Scissor</h1>\n            <button\n              className=\"btn btn-outline-success\"\n              onClick={() => setStart(!start)}\n            >\n              Start Game\n            </button>\n          </>\n        )}\n        {count === MAX_GAME && (\n          <div className=\"result\">\n            <div className=\"result-board d-flex flex-column justify-content-center\">\n              {playerScore > computerScore ? (\n                <h1 className=\"text-center text-light\">Player Win</h1>\n              ) : (\n                <h1 className=\"text-center text-light\">Player Lose</h1>\n              )}\n              <button className=\"btn btn-primary\" onClick={() => reset()}>\n                Play Again\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    </ContextElement.Provider>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}